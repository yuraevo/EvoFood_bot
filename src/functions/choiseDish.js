const DB = require("../connect_db");
const Client  = require('pg');

async function choiseDish(bot, id, first_name, username, category)
{
    try {
        if (category === "–°—É–ø—ã") {
            database = new Client.Pool(DB);
            var queryUser = `SELECT name_dish, description, cost, category 
                            FROM public."Dish" JOIN public."Category_Dish" 
                            ON public."Category_Dish".id = public."Dish".category 
                            WHERE public."Category_Dish".name = '${category}'`;
            var dish_name = await database.query(queryUser);
            var opts = { inline_keyboard: [] };
            dish_name.rows.forEach(element => {
                opts.inline_keyboard.push(
                    [
                        {text:"\uD83C\uDF72 " + element.name_dish, callback_data: element.name_dish }
                    ]);
            });
            if(dish_name.rows[0] != null) { 
TEXT = `
<b>ü§ç${first_name}, </b><i>—Å—É–ø –ª—é–±–∏–º –≤–æ –≤—Å–µ–º –º–∏—Ä–µ, –≤–æ –≤—Å–µ—Ö –∫—É—Ö–Ω—è—Ö üç≤</i>

<i>–û–¥–Ω–∞ üá™üá∏ –∏—Å–ø–∞–Ω—Å–∫–∞—è –ø–æ—Å–ª–æ–≤–∏—Ü–∞ –≥–ª–∞—Å–∏—Ç:<\/i> <b>¬´–ò–∑ —Å—É–ø–∞ –∏ –ª—é–±–≤–∏ –ø–µ—Ä–≤–æ–µ —Å–ª–æ–≤–æ –¥–æ—Ä–æ–∂–µ –≤—Ç–æ—Ä–æ–≥–æ¬ª</b> 

<i>–ö–æ–Ω–µ—á–Ω–æ, –≥–æ—Ä—è—á–∏–µ –∏—Å–ø–∞–Ω—Ü—ã —Å–ª–µ–≥–∫–∞ –ø—Ä–µ—É–≤–µ–ª–∏—á–∏–ª–∏, –Ω–æ —Å—É–ø ‚Äì —ç—Ç–æ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ –æ–¥–Ω–æ –∏–∑ —Å–∞–º—ã—Ö –∫–æ–º—Ñ–æ—Ä—Ç–Ω—ã—Ö –∏ –≤–∫—É—Å–Ω—ã—Ö –±–ª—é–¥.</i>

<strong>–ó–∞–∫–∞–∑—ã–≤–∞–π—Ç–µ, –±—É–¥–µ—Ç –≤–∫—É—Å–Ω–æ! \uD83D\uDE4C </strong>`;
                await bot.sendDocument(id, "img/sup.gif", {
                    caption: TEXT,
                    parse_mode: "HTML",
                    reply_markup: opts
                });
            }
        }
        else if (category === "–ì–æ—Ä—è—á–∏–µ –±–ª—é–¥–∞") {
            database = new Client.Pool(DB);
            var queryUser2 = ` SELECT name_dish, description, cost, category 
                            FROM public."Dish" 
                            JOIN public."Category_Dish" ON public."Category_Dish".id = public."Dish".category 
                            WHERE public."Category_Dish".name = '${category}'`;
            var dish_name2 = await database.query(queryUser2);
            var opts2 = { inline_keyboard: [] };
            dish_name2.rows.forEach(element => {
                opts2.inline_keyboard.push(
                    [
                        {text:"üî• " + element.name_dish, callback_data: element.name_dish }
                    ]);
            });
            if(dish_name2.rows[0] != null) {
TEXT = `
<b>üíõ ${first_name}</b>, <i>–ø–µ—Ä–µ–¥ –í–∞–º–∏ —Å–∞–º—ã–µ –≥–æ—Ä—è—á–∏–µ –±–ª—é–¥–∞ –Ω–∞—à–µ–≥–æ –∑–∞–≤–µ–¥–µ–Ω–∏—è üî• </i>


<strong>–ó–∞–∫–∞–∑—ã–≤–∞–π—Ç–µ, –±—É–¥–µ—Ç –≤–∫—É—Å–Ω–æ! \uD83D\uDE4C </strong>`;
                await bot.sendDocument(id, "img/zakaz.gif", {
                    caption: TEXT,
                    parse_mode: "HTML",
                    reply_markup: opts2
                });
            }
        }
        else if (category === "–ù–∞ –º–∞–Ω–≥–∞–ª–µ") {
            database = new Client.Pool(DB);
            var queryUser2 = `SELECT name_dish, description, cost, category 
                            FROM public."Dish" 
                            JOIN public."Category_Dish" ON public."Category_Dish".id = public."Dish".category 
                            WHERE public."Category_Dish".name = '${category}'`;
            var dish_name2 = await database.query(queryUser2);
            var opts2 = { inline_keyboard: [] };
            dish_name2.rows.forEach(element => {
                opts2.inline_keyboard.push(
                    [
                        {text:"ü•ì"  + element.name_dish, callback_data: element.name_dish }
                    ]);
            })
            if(dish_name2.rows[0] != null) {
TEXT = `
<b>${first_name}</b>, <i>–º–∞–Ω–≥–∞–ª –∏ —Ç–∞–Ω–¥—ã—Ä, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–ª–Ω–æ—Å—Ç—å—é –º–µ–Ω—è–µ—Ç –∏–¥–µ–æ–ª–æ–≥–∏—é –ø—Ä–∏–≥–æ—Ç–æ–≤–ª–µ–Ω–∏—è –±–ª—é–¥–∞ üçó</i>

<strong>–ó–∞–∫–∞–∑—ã–≤–∞–π—Ç–µ, –±—É–¥–µ—Ç –≤–∫—É—Å–Ω–æ! \uD83D\uDE4C </strong>`;

                await bot.sendDocument(id, "img/mangal.gif", {
                    caption: TEXT,
                    parse_mode: "HTML",
                    reply_markup: opts2
                });
            }
        }
        else if (category === "–°–∞–ª–∞—Ç—ã") {
            database = new Client.Pool(DB);
            var queryUser2 = `SELECT name_dish, description, cost, category 
                            FROM public."Dish" 
                            JOIN public."Category_Dish" ON public."Category_Dish".id = public."Dish".category 
                            WHERE public."Category_Dish".name = '${category}'`;
            var dish_name2 = await database.query(queryUser2);
            var opts2 = { inline_keyboard: [] };
            dish_name2.rows.forEach(element => {
                opts2.inline_keyboard.push(
                    [
                        {text:"\uD83E\uDD57 " + element.name_dish, callback_data: element.name_dish }
                    ]);
            })
            if(dish_name2.rows[0] != null) {
TEXT = `
<b>üíö${first_name}</b>, <i>–µ—Å–ª–∏ –æ–±—Ä–∞—Ç–∏—Ç—å—Å—è –∫ –í–∏–∫–∏–ø–µ–¥–∏–∏, —Ç–æ —Å–∞–ª–∞ÃÅ—Ç ‚Äî —ç—Ç–æ —Ö–æ–ª–æ–¥–Ω–æ–µ –±–ª—é–¥–æ –∏–∑ –∫—É—Å–æ—á–∫–æ–≤ –æ–≤–æ—â–µ–π, –∑–µ–ª–µ–Ω–∏, —Ä–∞–∑–ª–∏—á–Ω—ã—Ö –¥—Ä—É–≥–∏—Ö —Ä–∞—Å—Ç–µ–Ω–∏–π, –≥—Ä–∏–±–æ–≤, —Å –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ–º –ø—Ä–∏–ø—Ä–∞–≤—ã ü•ó

–ù–æ –∫–∞–∫ –±—ã –ø—Ä–æ—Å—Ç–æ —ç—Ç–æ –Ω–µ –∑–≤—É—á–∞–ª–æ, –≤–∫—É—Å –Ω–∞—à–∏—Ö —Å–∞–ª–∞—Ç–æ–≤ –í—ã –∑–∞–ø–æ–º–Ω–∏—Ç–µ –Ω–∞–¥–æ–ª–≥–æ!</i>

<strong>–ó–∞–∫–∞–∑—ã–≤–∞–π—Ç–µ, –±—É–¥–µ—Ç –≤–∫—É—Å–Ω–æ! \uD83D\uDE4C </strong>`;

                await bot.sendDocument(id, "img/salad.gif", {
                    caption: TEXT,
                    parse_mode: "HTML",
                    reply_markup: opts2
                })
            }
        }
        else if (category === "–†–æ–ª–ª—ã") {
            database = new Client.Pool(DB);
            var queryUser2 = `SELECT name_dish, description, cost, category 
                            FROM public."Dish" 
                            JOIN public."Category_Dish" ON public."Category_Dish".id = public."Dish".category 
                            WHERE public."Category_Dish".name = '${category}'`;
            var dish_name2 = await database.query(queryUser2);
            var opts2 = { inline_keyboard: [] };
            dish_name2.rows.forEach(element => {
                opts2.inline_keyboard.push(
                    [
                        {text:"\uD83C\uDF63 " + element.name_dish, callback_data: element.name_dish }
                    ]);
            })
            if(dish_name2.rows[0] != null) {
TEXT = `
<b>ü§ç${first_name}</b>, <i>–Ω–∞—à–∏ –º–∞—Å—Ç–µ—Ä–∞ –∫—É–ª–∏–Ω–∞—Ä–∏–∏ ‚Äì –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–µ –ø–æ–≤–∞—Ä–∞, —Å–æ–≤–µ—Ä—à–µ–Ω—Å—Ç–≤—É—é—Ç –≤–æ—Å—Ç–æ—á–Ω—ã–µ –∏–∑—ã—Å–∫–∏, –≤–Ω–æ—Å—è—Ç –≤ –Ω–∏—Ö –Ω–æ—Ç–∫–∏ –∫—Ä–µ–∞—Ç–∏–≤–∞ 
–∏ –ø—Ä–∏–¥–∞—é—Ç –æ—Å–æ–±–µ–Ω–Ω—ã–π —à–∞—Ä–º. –í —Ä–µ–∑—É–ª—å—Ç–∞—Ç–µ –∏—Ö —Ç—Ä—É–¥–∞ –ø–æ—è–≤–∏–ª–∏—Å—å –Ω–µ–æ–±—ã—á–Ω—ã–µ —Ä–æ–ª–ª—ã –∏ –Ω–µ –º–µ–Ω–µ–µ –Ω–µ–æ–±—ã—á–Ω—ã–µ —Å—É—à–∏. –í—Å–µ —Ä–æ–ª–ª—ã –æ—Ç –Ω–∞—à–µ–≥–æ –∑–∞–≤–µ–¥–µ–Ω–∏—è –æ—Ç–ª–∏—á–∞–µ—Ç –≤—ã—Å–æ–∫–æ–µ –∫–∞—á–µ—Å—Ç–≤–æ –ø—Ä–æ–¥—É–∫—Ç–æ–≤ –∏ –æ—Ç–º–µ–Ω–Ω—ã–π –≤–∫—É—Å</i>

<strong>–ó–∞–∫–∞–∑—ã–≤–∞–π—Ç–µ, –±—É–¥–µ—Ç –≤–∫—É—Å–Ω–æ! \uD83D\uDE4C </strong>`;

                await bot.sendDocument(id, "img/rolls.gif", {
                    caption: TEXT,
                    parse_mode: "HTML",
                    reply_markup: opts2
                })
            }
        }
        else if (category === "–ü–∏—Ü—Ü—ã") {
            database = new Client.Pool(DB);
            var queryUser2 = `SELECT name_dish, description, cost, category 
                            FROM public."Dish" 
                            JOIN public."Category_Dish" ON public."Category_Dish".id = public."Dish".category 
                            WHERE public."Category_Dish".name = '${category}'`;
            var dish_name2 = await database.query(queryUser2);
            var opts2 = { inline_keyboard: [] };
            dish_name2.rows.forEach(element => {
                opts2.inline_keyboard.push(
                    [
                        {text:"\uD83C\uDF55 " + element.name_dish, callback_data: element.name_dish }
                    ]);
            });
            if(dish_name2.rows[0] != null) {
TEXT = `
<b>${first_name}</b>, <i>–ø–∏—Ü—Ü–∞ - —Å—É–ø–µ—Ä–∑–≤–µ–∑–¥–∞ –∏—Ç–∞–ª—å—è–Ω—Å–∫–æ–π –∫—É—Ö–Ω–∏. –ù–∞—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–µ –±–ª—é–¥–æ —Å —Ö—Ä—É—Å—Ç—è—â–∏–º —Ç–µ—Å—Ç–æ–º, —Å–æ—á–Ω–æ–π –Ω–∞—á–∏–Ω–∫–æ–π, 
—Ä–∞—Å–ø–ª–∞–≤–ª–µ–Ω–Ω—ã–º —Å—ã—Ä–æ–º –∏ –∞—Ä–æ–º–∞—Ç–Ω—ã–º —Ç–æ–º–∞—Ç–Ω—ã–º —Å–æ—É—Å–æ–º - –≤–æ–ø–ª–æ—â–µ–Ω–∏–µ –≤–∫—É—Å–∞ –∫ –∂–∏–∑–Ω–∏ –∏ –ø—Ä–æ—Å—Ç–æ –Ω–µ–≤–µ—Ä–æ—è—Ç–Ω–æ –∞–ø–ø–µ—Ç–∏—Ç–Ω–∞—è –∑–¥–æ—Ä–æ–≤–∞—è –µ–¥–∞</i> üçï 

<strong>–ó–∞–∫–∞–∑—ã–≤–∞–π—Ç–µ, –±—É–¥–µ—Ç –≤–∫—É—Å–Ω–æ! \uD83D\uDE4C </strong>`;

                await bot.sendDocument(id, "img/pizza.gif", {
                    caption: TEXT,
                    parse_mode: "HTML",
                    reply_markup: opts2
                })
            }
        }
        else if (category === "–ß–∞–π") {
            database = new Client.Pool(DB);
            var queryUser2 = `SELECT name_dish, description, cost, category 
                            FROM public."Dish" 
                            JOIN public."Category_Dish" ON public."Category_Dish".id = public."Dish".category 
                            WHERE public."Category_Dish".name = '${category}'`;
            var dish_name2 = await database.query(queryUser2);
            var opts2 = { inline_keyboard: [] };
            dish_name2.rows.forEach(element => {
                opts2.inline_keyboard.push(
                    [
                        {text:"‚òï " + element.name_dish, callback_data: element.name_dish }
                    ]);
            })
            if(dish_name2.rows[0] != null) {
                TEXT = `
<b>${first_name}</b>, —á—Ç–æ –º–æ–∂–µ—Ç –±—ã—Ç—å –±–æ–ª–µ–µ —Ä–∞—Å—Å–ª–∞–±–ª—è—é—â–∏–º, —á–µ–º —á–∞—à–∫–∞ —á–∞—è –≤ —É—é—Ç–Ω–æ–º –º–µ—Å—Ç–µ?üçµ

<strong>–ó–∞–∫–∞–∑—ã–≤–∞–π—Ç–µ, –±—É–¥–µ—Ç –≤–∫—É—Å–Ω–æ! \uD83D\uDE4C </strong>`;

                await bot.sendDocument(id, "img/tea.gif", {
                    caption: TEXT,
                    parse_mode: "HTML",
                    reply_markup: opts2
                })
            }
        }
        else if (category === "–ö–æ—Ñ–µ") {
            database = new Client.Pool(DB);
            var queryUser2 = ` SELECT name_dish, description, cost, category 
                            FROM public."Dish" 
                            JOIN public."Category_Dish" ON public."Category_Dish".id = public."Dish".category 
                            WHERE public."Category_Dish".name = '${category}'`;
            var dish_name2 = await database.query(queryUser2);
            var opts2 = { inline_keyboard: [] };
            dish_name2.rows.forEach(element => {
                opts2.inline_keyboard.push(
                    [
                        {text:"‚òï " + element.name_dish, callback_data: element.name_dish }
                    ]);
            });
            if(dish_name2.rows[0] != null) {
                TEXT = `
<b>${first_name}</b>, —á—Ç–æ –º–æ–∂–µ—Ç –≤–∑–±–æ–¥—Ä–∏—Ç—å, –∫–∞–∫ –Ω–µ –∫–æ—Ñ–µ? ‚òï

<strong>–ó–∞–∫–∞–∑—ã–≤–∞–π—Ç–µ, –±—É–¥–µ—Ç –≤–∫—É—Å–Ω–æ! \uD83D\uDE4C </strong>`;
                await bot.sendDocument(id, "img/coffee.gif", {
                    caption: TEXT,
                    parse_mode: "HTML",
                    reply_markup: opts2
                });
            }
        }
        else if (category === "–°–æ–∫–∏") {
            database = new Client.Pool(DB);
            var queryUser2 = ` SELECT name_dish, description, cost, category 
                            FROM public."Dish" 
                            JOIN public."Category_Dish" ON public."Category_Dish".id = public."Dish".category 
                            WHERE public."Category_Dish".name = '${category}'`;
            var dish_name2 = await database.query(queryUser2);
            var opts2 = { inline_keyboard: [] };
            dish_name2.rows.forEach(element => {
                opts2.inline_keyboard.push(
                    [
                        {text:"üßÉ " + element.name_dish, callback_data: element.name_dish }
                    ]);
            });
            if(dish_name2.rows[0] != null) {
                TEXT = `
<b>${first_name}</b>, <i>—Å–≤–µ–∂–µ–≤—ã–∂–∞—Ç—ã–µ —Å–æ–∫–∏ ‚Äì —ç—Ç–æ –Ω–∞—Ç—É—Ä–∞–ª—å–Ω—ã–π –Ω–∞–ø–∏—Ç–æ–∫, –∫–æ—Ç–æ—Ä—ã–π –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç—Å—è –∏–∑ —Å–≤–µ–∂–∏—Ö —Ñ—Ä—É–∫—Ç–æ–≤, –æ–≤–æ—â–µ–π, –∑–µ–ª–µ–Ω–∏, –∫–æ—Ä–Ω–µ–ø–ª–æ–¥–æ–≤,  
–∏ –ø–æ–¥–ª–µ–∂–∏—Ç —É–ø–æ—Ç—Ä–µ–±–ª–µ–Ω–∏—é —Å—Ä–∞–∑—É –ø–æ—Å–ª–µ –æ—Ç–∂–∏–º–∞. –í —Ç–∞–∫–∏–µ —Å–æ–∫–∏ –Ω–µ –ø—Ä–∏–Ω—è—Ç–æ –¥–æ–±–∞–≤–ª—è—Ç—å –ø–æ–¥—Å–ª–∞—Å—Ç–∏—Ç–µ–ª–∏ –∏–ª–∏ –¥—Ä—É–≥–∏–µ –¥–æ–±–∞–≤–∫–∏</i>

<strong>–ó–∞–∫–∞–∑—ã–≤–∞–π—Ç–µ, –±—É–¥–µ—Ç –≤–∫—É—Å–Ω–æ! \uD83D\uDE4C </strong>`;
                await bot.sendDocument(id, "img/juice.gif", {
                    caption: TEXT,
                    parse_mode: "HTML",
                    reply_markup: opts2
                });
            }
        }
        else if (category === "–í–æ–¥–∞") {
            database = new Client.Pool(DB);
            var queryUser2 = ` SELECT name_dish, description, cost, category 
                            FROM public."Dish" 
                            JOIN public."Category_Dish" ON public."Category_Dish".id = public."Dish".category 
                            WHERE public."Category_Dish".name = '${category}'`;
            var dish_name2 = await database.query(queryUser2);
            var opts2 = { inline_keyboard: [] };
            dish_name2.rows.forEach(element => {
                opts2.inline_keyboard.push(
                    [
                        {text:"üåä " + element.name_dish, callback_data: element.name_dish }
                    ]);
            });
            if(dish_name2.rows[0] != null) {
                TEXT = `
<b>${first_name}</b>, <i>–¥–∞–≤–∞–π—Ç–µ –±–æ—Ä–æ—Ç—å—Å—è —Å –∂–∞–∂–¥–æ–π –≤–º–µ—Å—Ç–µ?</i>

<strong>–ó–∞–∫–∞–∑—ã–≤–∞–π—Ç–µ, –±—É–¥–µ—Ç –≤–∫—É—Å–Ω–æ! \uD83D\uDE4C </strong>`;
                await bot.sendDocument(id, "img/water.gif", {
                    caption: TEXT,
                    parse_mode: "HTML",
                    reply_markup: opts2
                });
            }
        }
        else if (category === "–ö–æ–∫—Ç–µ–π–ª—å") {
            database = new Client.Pool(DB);
            var queryUser2 = `SELECT name_dish, description, cost, category 
                            FROM public."Dish" 
                            JOIN public."Category_Dish" ON public."Category_Dish".id = public."Dish".category 
                            WHERE public."Category_Dish".name = '${category}'`;
            var dish_name2 = await database.query(queryUser2);
            var opts2 = { inline_keyboard: [] };
            dish_name2.rows.forEach(element => {
                opts2.inline_keyboard.push(
                    [
                        {text:"üçπ " + element.name_dish, callback_data: element.name_dish }
                    ]);
            });
            if(dish_name2.rows[0] != null) {
                TEXT = `
<b>${first_name}</b>, <i>–ê–ª–∫–æ–≥–æ–ª—å–Ω—ã–º –∫–æ–∫—Ç–µ–π–ª–µ–º —Å—á–∏—Ç–∞–µ—Ç—Å—è –Ω–∞–ø–∏—Ç–æ–∫ –≤ –∫–æ—Ç–æ—Ä–æ–º –≤ –∫–∞—á–µ—Å—Ç–≤–µ –æ–¥–Ω–æ–≥–æ –∏–ª–∏ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç–æ–≤ –∏—Å–ø–æ–ª—å–∑—É—é—Ç —Å–ø–∏—Ä—Ç–Ω—ã–µ –Ω–∞–ø–∏—Ç–∫–∏. 
–°–∞–º –∂–µ –∫–æ–∫—Ç–µ–π–ª—å –ø–æ–ª—É—á–∞–µ—Ç—Å—è –æ—Ç —Å–º–µ—à–∏–≤–∞–Ω–∏—è –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö –∂–∏–¥–∫–æ—Å—Ç–µ–π, –∞ –∏–Ω–æ–≥–¥–∞ –∏ —Å –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ–º —Å–ø–µ—Ü–∏–π –∏ —Ñ—Ä—É–∫—Ç–æ–≤ üçπ</i>

<strong>–ó–∞–∫–∞–∑—ã–≤–∞–π—Ç–µ, –±—É–¥–µ—Ç –≤–∫—É—Å–Ω–æ! \uD83D\uDE4C </strong>`;

                await bot.sendDocument(id, "img/cocktail.gif", {
                    caption: TEXT,
                    parse_mode: "HTML",
                    reply_markup: opts2
                });
            }
        }
        else if (category === "–í–∏–Ω–æ") {
            database = new Client.Pool(DB);
            var queryUser2 = `SELECT name_dish, description, cost, category 
                            FROM public."Dish" 
                            JOIN public."Category_Dish" ON public."Category_Dish".id = public."Dish".category 
                            WHERE public."Category_Dish".name = '${category}'`;
            var dish_name2 = await database.query(queryUser2);
            var opts2 = { inline_keyboard: [] }
            dish_name2.rows.forEach(element => {
                opts2.inline_keyboard.push(
                    [
                        {text:"üç∑ " + element.name_dish, callback_data: element.name_dish }
                    ]);
            });
            if(dish_name2.rows[0] != null) {
                TEXT = `
<b>${first_name}</b>, <i>–≤–∏–Ω—É –ø–æ—Å–≤—è—â–µ–Ω–æ –Ω–µ–º–∞–ª–æ –≤—ã—Å–∫–∞–∑—ã–≤–∞–Ω–∏–π –≤–µ–ª–∏–∫–∏—Ö –ª—é–¥–µ–π. –í–∏–Ω–æ —Ä—É–≥–∞—é—Ç, –≤–∏–Ω–æ –≤–æ—Å—Ö–≤–∞–ª—è—é—Ç, 
–Ω–∞–¥ –Ω–∏–º —à—É—Ç—è—Ç, –Ω–æ –Ω–∏–∫–æ–≥–æ —ç—Ç–æ—Ç –Ω–∞–ø–∏—Ç–æ–∫ –Ω–µ –æ—Å—Ç–∞–≤–ª—è–µ—Ç —Ä–∞–≤–Ω–æ–¥—É—à–Ω—ã–º üç∑</i>

<strong>–ó–∞–∫–∞–∑—ã–≤–∞–π—Ç–µ, –±—É–¥–µ—Ç –≤–∫—É—Å–Ω–æ! \uD83D\uDE4C </strong>`;
                await bot.sendDocument(id, "img/wine.gif", {
                    caption: TEXT,
                    parse_mode: "HTML",
                    reply_markup: opts2
                });
            }
        }
        else if (category === "–ö—Ä–µ–ø–∫–∏–π –∞–ª–∫–æ–≥–æ–ª—å") {
            database = new Client.Pool(DB);
            var queryUser2 = `SELECT name_dish, description, cost, category 
                            FROM public."Dish" 
                            JOIN public."Category_Dish" ON public."Category_Dish".id = public."Dish".category 
                            WHERE public."Category_Dish".name = '${category}'`;
            var dish_name2 = await database.query(queryUser2);
            var opts2 = { inline_keyboard: [] };
            dish_name2.rows.forEach(element => {
                opts2.inline_keyboard.push(
                    [
                        {text:"ü•É " + element.name_dish, callback_data: element.name_dish }
                    ]);
            });
            if(dish_name2.rows[0] != null) {
                TEXT = `
<b>${first_name}</b>, <i> –∏—Ç–∞–∫, —Å–Ω–∞—á–∞–ª–∞ –æ–ø—Ä–µ–¥–µ–ª–∏–º, –∫–∞–∫–æ–π –∞–ª–∫–æ–≥–æ–ª—å –ø–æ–¥–ø–∞–¥–∞–µ—Ç –ø–æ–¥ —ç—Ç—É –∫–∞—Ç–µ–≥–æ—Ä–∏—é. 
–ö—Ä–µ–ø–∫–∏–º–∏ –Ω–∞–ø–∏—Ç–∫–∞–º–∏ –Ω–∞–∑—ã–≤–∞—é—Ç —Ç–∞–∫–∏–µ, –≤ –∫–æ—Ç–æ—Ä—ã—Ö —Å–æ–¥–µ—Ä–∂–∞–Ω–∏–µ –∞–ª–∫–æ–≥–æ–ª—è –ø—Ä–µ–≤—ã—à–∞–µ—Ç 20%. 
–í –Ω–µ–∫–æ—Ç–æ—Ä—ã—Ö –∫–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏—è—Ö –ø–æ—Ä–æ–≥–æ–≤—ã–º —á–∏—Å–ª–æ–º —Å—Ç–∞–Ω–æ–≤–∏—Ç—Å—è 28% ü•É</i>

<strong>–ó–∞–∫–∞–∑—ã–≤–∞–π—Ç–µ, –±—É–¥–µ—Ç –≤–∫—É—Å–Ω–æ! \uD83D\uDE4C </strong>`;
                await bot.sendDocument(id, "img/strong_alchogol.gif", {
                    caption: TEXT,
                    parse_mode: "HTML",
                    reply_markup: opts2
                })
            }
        }

        else if (category === "–°–ª–∞–¥–∫–æ–µ") {
            database = new Client.Pool(DB);
            var queryUser2 = `SELECT name_dish, description, cost, category 
                            FROM public."Dish" 
                            JOIN public."Category_Dish" ON public."Category_Dish".id = public."Dish".category 
                            WHERE public."Category_Dish".name = '${category}'`;
            var dish_name2 = await database.query(queryUser2);
            var opts2 = { inline_keyboard: [] }
            dish_name2.rows.forEach(element => {
                opts2.inline_keyboard.push(
                    [
                        {text:"üç∞ " + element.name_dish, callback_data: element.name_dish }
                    ]);
            })
            if(dish_name2.rows[0] != null) {
                TEXT = `
<b>${first_name}</b>, <i>–≥–∞—Å—Ç—Ä–æ–Ω–æ–º–∏—á–µ—Å–∫–∏–µ —Ç—Ä–∞–¥–∏—Ü–∏–∏ —Å–ª–∞–¥–∫–æ–≥–æ –º–∏—Ä–∞ ‚Äì —ç—Ç–æ –±–µ—Å–∫–æ–Ω–µ—á–Ω–æ–µ –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏–µ. –°–ø–∏—Å–æ–∫ –¥–µ—Å–µ—Ä—Ç–æ–≤ –∏ —Ç–æ—Ä—Ç–æ–≤ –≤ —ç—Ç–æ–º –ø–ª–∞–Ω–µ –Ω–µ –∏—Å–∫–ª—é—á–µ–Ω–∏–µ.</i>üç∞

<strong>–ó–∞–∫–∞–∑—ã–≤–∞–π—Ç–µ, –±—É–¥–µ—Ç –≤–∫—É—Å–Ω–æ! \uD83D\uDE4C </strong>`;
                await bot.sendDocument(id, "img/sweet.gif", {
                    caption: TEXT,
                    parse_mode: "HTML",
                    reply_markup: opts2
                })
            }
        }
    }
    catch(ex) {
        console.log('Something wrong happend - ' + ex)
    }
    finally {
        await database.end()
        console.log("DB disconnect")
    }
}

module.exports.choiseDish = choiseDish;